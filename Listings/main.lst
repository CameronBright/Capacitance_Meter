C51 COMPILER V9.60.0.0   MAIN                                                              12/17/2023 15:19:14 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\WorkSoftware\Keil5_C51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\code) DEBUG OBJE
                    -CTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2          program versions : 3.3.3
   3          
   4          此分支[branch1_1]用于编写主代码
   5          
   6          Descrription: cap_value_k4改成字符串数组
   7          
   8          更新日志:
   9          1 删除了检测开关det_switch，修复了检测不正常的问题
  10          cap_value_k改成了字符串数组
  11          
  12          modification: 2023/12/17 15:03
  13          
  14          modifier: Cameron Bright
  15          
  16          */
  17          
  18          #include "main.h"
  19          #include <string.h>
  20          #include "LCD1602.h"  //包含LCD1602头文件
  21          #include "Key.h"      //按键扫描函数
  22          #include "ADC.h"
  23          #include "Relay.h"    //继电器头文件
  24          #include <stdio.h>
  25          
  26          sbit Buzzer = P2^3;//蜂鸣器 低电平工作
  27          
  28          void Timer0_Init(void); //1毫秒@11.0592MHz
  29          void Delay(unsigned int delay); //定时器延时 
  30          
  31          void Key_Proc(void);       //Keystroke process function
  32          void Lcd_Proc(void);       //LCD Dsiplay process function
  33          void Detection_Proc(void); //cap detection process function
  34          
  35          unsigned int key_slow_down = 0; //按键刷新计数
  36          unsigned int lcd_slow_down = 0; //LCD刷新计数
  37          unsigned int Det_slow_down = 0; //adc检测刷新计数
  38          
  39          unsigned int timer_tick = 0;
  40          unsigned int buzzer_tick = 0;//用于开机计数500ms
  41          
  42          unsigned char key_value; //按键处理变量
  43          unsigned char key_down;  //按键下降沿
  44          unsigned char key_up;    //上升沿
  45          unsigned char key_old;   //上次的按键值
  46          
  47          unsigned int led1_tick = 1; //状态灯计数
  48          unsigned int key_tick; //long key press count
  49          unsigned int delay_tick;//定时器延时计数
  50          unsigned int cap_tick;  //电容测量计计时
  51          unsigned int relay_tick = 0;//继电器计时
  52          
  53          unsigned char dispbuf[6] = {'0','0','0','0','0','0'};
  54          unsigned char page = 0;//lcd 显示界面
C51 COMPILER V9.60.0.0   MAIN                                                              12/17/2023 15:19:14 PAGE 2   

  55          unsigned char cursor = 5; //光标
  56          
  57          unsigned char relay_index;  //继电器选择
  58          
  59          unsigned char password[6] = {'0','0','0','0','0','0'};
  60          //unsigned char password_true[6] = {'8','7','6','5','4','3'};
  61          
  62          unsigned char password_true[6] = {'1','0','0','0','0','0'}; //正确密码
  63          //unsigned char password_true[6] = {'8','7','6','5','4','3'}; //正确密码
  64          unsigned char password_for = 0; //index
  65          
  66          unsigned char adc_char;     //adc检测返回的char类型值
  67          float adc_float;            //adc检测返回的float类型值，就是具体的电压值
  68          
  69          xdata float relay_det_value[5]; //relay0 relay1-4
  70          unsigned char relay_det_index = 0;
  71          
  72          xdata float cap_calibrations_input[6];//校准输入值
  73          xdata float cap_calibrations_value[6];//校准值
  74          xdata float cap_calibrations_buf = 0; //测量校验值的缓冲区
  75          xdata float increments[] = {100, 10, 1, 0, 0.1, 0.01};//个位数+1、百位数+1....
  76          
  77          unsigned char calibrations = 0; //校准
  78          
  79          float cap_value;            //存放电容的容值
  80          char cap_units;             //电容的单位0:uF、1:nF、 2:pF
  81          
  82          void main()
  83          {
  84   1        Timer0_Init();//定时器初始化
  85   1        LCD_Init(); //LCD函数初始化
  86   1        ADC_Init(); //ADC函数初始化
  87   1        
  88   1        //Buzzer = 0;//蜂鸣器初始化
  89   1        
  90   1        Relay_Control(0, 0);//继电器全关
  91   1        
  92   1        while(1)
  93   1        { 
  94   2          Key_Proc();
  95   2          Lcd_Proc();
  96   2          Detection_Proc(); 
  97   2        }
  98   1      }
  99          
 100          //================LCD=======================
 101          
 102          void Lcd_Proc(void)     //LCD Dsiplay process function
 103          {
 104   1        if(lcd_slow_down) return;   //200ms刷新一次
 105   1          lcd_slow_down = 1;
 106   1        
 107   1        if(page == 0)            //测量界面 初始界面
 108   1        {     
 109   2          sprintf((char *)dispbuf,"%06.2f",cap_value);
 110   2          
 111   2          LCD_WriteCommand(0x0C);//关光标
 112   2          
 113   2          LCD_ShowString(1,1,"Press OK Start!");
 114   2          
 115   2          LCD_ShowChar(2,1,dispbuf[0]);
 116   2          LCD_ShowChar(2,2,dispbuf[1]);
C51 COMPILER V9.60.0.0   MAIN                                                              12/17/2023 15:19:14 PAGE 3   

 117   2          LCD_ShowChar(2,3,dispbuf[2]);
 118   2          LCD_ShowChar(2,4,dispbuf[3]);
 119   2          LCD_ShowChar(2,5,dispbuf[4]);
 120   2          LCD_ShowChar(2,6,dispbuf[5]);
 121   2          
 122   2          switch(cap_units)
 123   2          {
 124   3            case 0:
 125   3              LCD_ShowString(2,7,"uF");
 126   3              break;
 127   3            case 1:
 128   3              LCD_ShowString(2,7,"nF");
 129   3              break;
 130   3            case 2:
 131   3              LCD_ShowString(2,7,"pF");
 132   3              break;
 133   3            default:
 134   3              break;
 135   3          }
 136   2          
 137   2        }
 138   1        else if(page == 1)       //输密码页
 139   1        { 
 140   2          LCD_WriteCommand(0x0f);//开光标
 141   2          
 142   2          LCD_ShowString(1,2,"Input Password");
 143   2          LCD_ShowString(2,6,password);
 144   2        }
 145   1        else if(page == 2)       //密码错误页
 146   1        {
 147   2          LCD_WriteCommand(0x0C);//关光标
 148   2          LCD_ShowString(1,6,"ERROR");
 149   2        }
 150   1        else if(page == 3)       //密码正确页
 151   1        {
 152   2          LCD_WriteCommand(0x0C);//关光标
 153   2          LCD_ShowString(1,6,"RIGHT");
 154   2        }
 155   1        else if(page == 4)
 156   1        {
 157   2          LCD_ShowString(1,1,"Wait...");
 158   2          LCD_ShowString(2,1,"Press OK End");
 159   2        }
 160   1        else if(page == 5)       //校准输入页
 161   1        {   
 162   2          LCD_WriteCommand(0x0f);//开光标
 163   2          sprintf((char *)dispbuf,"%06.2f",cap_calibrations_buf);
 164   2          
 165   2          LCD_ShowChar(2,1,dispbuf[0]);
 166   2          LCD_ShowChar(2,2,dispbuf[1]);
 167   2          LCD_ShowChar(2,3,dispbuf[2]);
 168   2          LCD_ShowChar(2,4,dispbuf[3]);
 169   2          LCD_ShowChar(2,5,dispbuf[4]);
 170   2          LCD_ShowChar(2,6,dispbuf[5]);
 171   2          
 172   2          LCD_ShowChar(1,1,calibrations+0x30); //左上角显示校准挡位 +0x30转换成ASC11码输出
 173   2        }
 174   1        else if(page == 6) //校准完成页
 175   1        {   
 176   2          LCD_ShowChar(1,1,'A');
 177   2          Delay(2000);
 178   2          Lcd_Clear();
C51 COMPILER V9.60.0.0   MAIN                                                              12/17/2023 15:19:14 PAGE 4   

 179   2          page = 0;
 180   2        }
 181   1        
 182   1        if(page == 2 || page == 3) //闪一下ERROR和RIGHT的页面
 183   1        {
 184   2          Delay(2000); //两秒后切换页面
 185   2          Lcd_Clear();
 186   2          if(page == 2)
 187   2            page = 0;//密码错误输完后切换回测量界面   
 188   2          if(page == 3)
 189   2          {
 190   3            page = 5;//密码正确输完后切换到校准界面
 191   3            cursor = 0;//初始化一下光标位置
 192   3          } 
 193   2        }
 194   1        
 195   1        //LCD_WriteCommand(0x80+cursor); //第一行光标
 196   1        LCD_WriteCommand(0xc0+cursor); //第二行光标 
 197   1      }
 198          
 199          //================Key=======================
 200          
 201          void Key_Proc(void)
 202          {
 203   1        if(key_slow_down) return;   //10ms更新一次
 204   1          key_slow_down = 1;
 205   1        
 206   1        key_value = Key_Read();
 207   1        key_down = key_value & (key_value ^ key_old);
 208   1        key_up = ~key_value & (key_value ^ key_old);
 209   1        key_old = key_value;
 210   1      
 211   1        if(key_down)       //长按五秒
 212   1          key_tick = 2000;
 213   1        
 214   1        if(key_old)
 215   1        {
 216   2          if(key_tick == 0)
 217   2            {
 218   3              Lcd_Clear();
 219   3              page = 1;
 220   3              
 221   3              //清空密码字符串
 222   3              for(password_for = 0;password_for <= 5; password_for++)
 223   3              {
 224   4                password[password_for] = '0';
 225   4              }
 226   3            }
 227   2        }
 228   1        
 229   1        if(key_tick)
 230   1        {
 231   2          switch(key_up)
 232   2          {
 233   3            case 1:        //背光/校准按键
 234   3            {
 235   4              key_tick = 0;
 236   4              break;
 237   4            }
 238   3            case 2:        //↑ 
 239   3            {
 240   4              if(page == 1)   //输密码页
C51 COMPILER V9.60.0.0   MAIN                                                              12/17/2023 15:19:14 PAGE 5   

 241   4              {
 242   5                password[cursor-5] += 1;  //按照光标位置加
 243   5                if(password[cursor-5] > '9')
 244   5                  password[cursor-5] = '9';
 245   5              }
 246   4              else if(page == 5) //校准页
 247   4              {
 248   5                cap_calibrations_buf += increments[cursor];
 249   5                if(cap_calibrations_buf >= 1000)
 250   5                  cap_calibrations_buf -= 1000;
 251   5              }
 252   4              key_tick = 0;
 253   4              break;
 254   4            }
 255   3            case 3:        //↓
 256   3            {
 257   4              if(page == 1)   //输密码页
 258   4              {
 259   5                password[cursor-5] -= 1; //按照光标位置减
 260   5                if(password[cursor-5] == '/')
 261   5                  password[cursor-5] = '0';
 262   5              }else if(page == 5) //校准页
 263   4              {
 264   5                cap_calibrations_buf -= increments[cursor];
 265   5                if(cap_calibrations_buf < 0)
 266   5                  cap_calibrations_buf = 0;
 267   5              }
 268   4              key_tick = 0;
 269   4              break;
 270   4            }
 271   3            case 4:        //←
 272   3            {
 273   4              if(page == 1)   //输密码页
 274   4              {
 275   5                if(--cursor <= 5)
 276   5                  cursor = 5;
 277   5              }else if(page == 5) //校准页
 278   4              {
 279   5                if(--cursor == 255) //光标限位unsigned char类型0-1=255
 280   5                  cursor = 0;
 281   5              }
 282   4              key_tick = 0;
 283   4              break;
 284   4            }
 285   3            case 5:        //→
 286   3            {
 287   4              if(page == 1)  //输密码页
 288   4              {
 289   5                if(++cursor >= 10)
 290   5                  cursor = 10;
 291   5              }else if(page == 5) //校准页
 292   4              {
 293   5                if(++cursor > 5)  //光标限位
 294   5                  cursor = 5;
 295   5              }
 296   4              key_tick = 0;
 297   4              break;
 298   4            }
 299   3            case 6:        //OK
 300   3            {
 301   4              if(page == 0)      //如果在测量页，按下OK键开始测量
 302   4              {
C51 COMPILER V9.60.0.0   MAIN                                                              12/17/2023 15:19:14 PAGE 6   

 303   5                Lcd_Clear();
 304   5                page = 4;
 305   5              }
 306   4              else if(page == 4) //如果正在测量，按下OK键停止测量
 307   4              {
 308   5                Lcd_Clear();
 309   5                page = 0;
 310   5                cap_value = 0;//清零
 311   5                
 312   5                if(relay_det_value[1] > 5.00)//如果被测电容超过了量程(50uF - 220pF)，就限制在50uF
 313   5                {
 314   6                  cap_value = 50.0;
 315   6                  cap_units = 0;           //单位换成uF
 316   6                }
 317   5                if(relay_det_value[1] <= 5.00 && relay_det_value[1] > 0.50)    //测量50uF-5uF
 318   5                {
 319   6                  cap_value = relay_det_value[1] * 10;
 320   6                  cap_units = 0;           //单位换成uF
 321   6                }
 322   5                else if(relay_det_value[1] <= 0.50 && relay_det_value[2] > 0.50)//测量5uF-500nF
 323   5                {
 324   6                  cap_value = relay_det_value[2];
 325   6                  cap_units = 0;           //单位换成uF
 326   6                }
 327   5                else if(relay_det_value[2] <= 0.50 && relay_det_value[3] > 0.50)//测量500nF-50nF
 328   5                {
 329   6                  cap_value = relay_det_value[3] * 100;
 330   6                  cap_units = 1;           //单位换成nF
 331   6                }
 332   5                else if(relay_det_value[3] <= 0.50 && relay_det_value[4] > 0.50)//测量50nF-5nF
 333   5                {
 334   6                  cap_value = relay_det_value[4] * 10;
 335   6                  cap_units = 1;           //单位换成nF
 336   6                }
 337   5                else if(relay_det_value[4] <= 0.50)                     //测量5000pF-0pF
 338   5                {
 339   6                  cap_value = relay_det_value[0];
 340   6                  cap_units = 1;           //单位换成nF
 341   6                }
 342   5              }
 343   4              else if(page == 1) //如果在输密码页，按下OK键确认密码
 344   4              {
 345   5                Lcd_Clear();
 346   5                if(strncmp(password,password_true,6) == 0)
 347   5                  page = 3;
 348   5                else
 349   5                  page = 2;
 350   5              }
 351   4              else if(page == 5) //如果在校验页面
 352   4              {
 353   5                cap_calibrations_input[calibrations] = cap_calibrations_buf;//将每一次的校验值储存起来
 354   5                //cap_calibrations_value[calibrations] = cap_calibrations_input[calibrations] - 
 355   5                cap_calibrations_buf = 0;//缓冲区清零
 356   5                calibrations += 1;
 357   5                
 358   5                
 359   5                if(calibrations > 6)
 360   5                {
 361   6                  calibrations = 0;
 362   6                  cap_value = 0;//清零
 363   6                  page = 6; //跳转到校准完成页
 364   6                }
C51 COMPILER V9.60.0.0   MAIN                                                              12/17/2023 15:19:14 PAGE 7   

 365   5              }   
 366   4              key_tick = 0;
 367   4              break;
 368   4            }
 369   3            
 370   3            default:
 371   3              break;
 372   3          }   
 373   2        }
 374   1      }
 375          
 376          //================电容检测函数======================
 377          void Detection_Proc(void)
 378          {
 379   1        if(Det_slow_down) return;   //10ms更新一次
 380   1        Det_slow_down = 1;
 381   1        
 382   1        adc_char = GetADCResult(0); //测量P10 ADC
 383   1        relay_det_value[relay_index] = (float)adc_char/51;//转换成电压值
 384   1        
 385   1      
 386   1        Relay_Control(relay_index, 1);//继电器控制函数刷新
 387   1      }
 388          
 389          //================中断函数=======================
 390          void Timer0_Isr(void) interrupt 1
 391          {
 392   1        if(++key_slow_down == 10) key_slow_down = 0;
 393   1        if(++lcd_slow_down == 200) lcd_slow_down = 0;
 394   1        if(++Det_slow_down == 50) Det_slow_down = 0;
 395   1        
 396   1        if(delay_tick > 0) delay_tick--;//延时函数 会卡住当前函数
 397   1        if(key_tick > 0) key_tick--;    //按键计时
 398   1        
 399   1        //呼吸灯 用于测试中断
 400   1      //  if(++led1_tick >= 1000)
 401   1      //  {
 402   1      //    LED1 ^= 1;
 403   1      //    led1_tick = 0;
 404   1      //  }
 405   1          
 406   1        
 407   1      //  if(Buzzer == 0)
 408   1      //  {
 409   1      //    if(++buzzer_tick >= 500)
 410   1      //      {
 411   1      //        Buzzer = 1;
 412   1      //        buzzer_tick = 0;
 413   1      //      }
 414   1      //  }   
 415   1      
 416   1      //---------继电器切换控制----------------------
 417   1        if(page ==  4)
 418   1        {
 419   2          if(++relay_tick > 1000)
 420   2          {
 421   3            if(++relay_index > 4)//继电器控制 index1=继电器1
 422   3              relay_index = 0;
 423   3            relay_tick = 0;
 424   3          }
 425   2        }
 426   1        else if(page ==  5)
C51 COMPILER V9.60.0.0   MAIN                                                              12/17/2023 15:19:14 PAGE 8   

 427   1        {   
 428   2          switch(calibrations)
 429   2          {
 430   3            case 0:             //22uF
 431   3              relay_index = 1;
 432   3            break;
 433   3            case 1:             //2.2uF
 434   3              relay_index = 2;
 435   3            break;
 436   3            case 2:             //220nF
 437   3              relay_index = 3;
 438   3            break;
 439   3            case 3:             //22nF
 440   3              relay_index = 4;
 441   3            break;
 442   3            case 4: case 5:     //2.2nF 0.2nF
 443   3              relay_index = 0;
 444   3            break;
 445   3          }
 446   2        }
 447   1      //---------继电器切换控制----------------------  
 448   1        
 449   1      }
 450          
 451          void Delay(unsigned int delay) //定时器延时 会卡住当前函数，但不会影响整个代码
 452          {
 453   1        delay_tick = delay;
 454   1        while(delay_tick > 0);
 455   1      }
 456          
 457          void Timer0_Init(void)    //1毫秒@11.0592MHz
 458          {
 459   1        AUXR |= 0x80;     //定时器时钟1T模式
 460   1        TMOD &= 0xF0;     //设置定时器模式
 461   1        TL0 = 0xCD;       //设置定时初始值
 462   1        TH0 = 0xD4;       //设置定时初始值
 463   1        TF0 = 0;        //清除TF0标志
 464   1        TR0 = 1;        //定时器0开始计时
 465   1        ET0 = 1;        //使能定时器0中断
 466   1        EA = 1;         //总中断
 467   1      }
 468           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1879    ----
   CONSTANT SIZE    =     80    ----
   XDATA SIZE       =     96    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     58    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
