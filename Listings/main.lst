C51 COMPILER V9.60.0.0   MAIN                                                              12/14/2023 17:25:46 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\WorkSoftware\Keil5_C51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\code) DEBUG OBJE
                    -CTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2          program versions : 2.4.2
   3          
   4          此分支[branch1]用于编写校验代码
   5          
   6          Descrription: 需要切换回主分支修改测量代码
   7          
   8          更新日志:
   9          1 新增了在测量无法测量(量程范围以外)的电容时，测量结果清零
  10          
  11          modification: 2023/12/14 17:00
  12          
  13          modifier: Cameron Bright
  14          
  15          */
  16          
  17          #include "main.h"
  18          #include <string.h>
  19          #include "LCD1602.h"  //包含LCD1602头文件
  20          #include "Key.h"      //按键扫描函数
  21          #include "ADC.h"
  22          #include "Relay.h"    //继电器头文件
  23          #include <stdio.h>
  24          
  25          sbit Buzzer = P2^3;//蜂鸣器 低电平工作
  26          
  27          void Timer0_Init(void); //1毫秒@11.0592MHz
  28          void Delay(unsigned int delay); //定时器延时 
  29          
  30          void Key_Proc(void);       //Keystroke process function
  31          void Lcd_Proc(void);       //LCD Dsiplay process function
  32          void Detection_Proc(void); //cap detection process function
  33          
  34          unsigned int key_slow_down = 0; //按键刷新计数
  35          unsigned int lcd_slow_down = 0; //LCD刷新计数
  36          unsigned int Det_slow_down = 0; //adc检测刷新计数
  37          
  38          unsigned int timer_tick = 0;
  39          unsigned int buzzer_tick = 0;//用于开机计数500ms
  40          
  41          unsigned char key_value; //按键处理变量
  42          unsigned char key_down;  //按键下降沿
  43          unsigned char key_up;    //上升沿
  44          unsigned char key_old;   //上次的按键值
  45          
  46          unsigned int led1_tick = 1; //状态灯计数
  47          unsigned int key_tick; //long key press count
  48          unsigned int delay_tick;//定时器延时计数
  49          unsigned int cap_tick;  //电容测量计计时
  50          unsigned int relay_tick = 0;//继电器计时
  51          
  52          unsigned char dispbuf[6] = {'0','0','0','0','0','0'};
  53          unsigned char page = 0;//lcd 显示界面
  54          unsigned char cursor = 5; //光标
C51 COMPILER V9.60.0.0   MAIN                                                              12/14/2023 17:25:46 PAGE 2   

  55          
  56          unsigned char relay_index;  //继电器选择
  57          
  58          unsigned char password[6] = {'0','0','0','0','0','0'};
  59          //unsigned char password_true[6] = {'8','7','6','5','4','3'};
  60          
  61          unsigned char password_true[6] = {'1','0','0','0','0','0'}; //正确密码
  62          //unsigned char password_true[6] = {'8','7','6','5','4','3'}; //正确密码
  63          unsigned char password_for = 0; //index
  64          
  65          unsigned char adc_char;     //adc检测返回的char类型值
  66          float adc_float;            //adc检测返回的float类型值，就是具体的电压值
  67          
  68          xdata float cap_value_k1;         
  69          xdata float cap_value_k2;
  70          xdata float cap_value_k3;
  71          xdata float cap_value_k4;
  72          
  73          float cap_value;            //存放电容的容值
  74          char cap_units;             //电容的单位0:uF、1:nF、 2:pF
  75          
  76          void main()
  77          {
  78   1        Timer0_Init();//定时器初始化
  79   1        LCD_Init(); //LCD函数初始化
  80   1        ADC_Init(); //ADC函数初始化
  81   1        
  82   1        //Buzzer = 0;//蜂鸣器初始化
  83   1        
  84   1        Relay_Control(0, 0);//继电器全关
  85   1        
  86   1        while(1)
  87   1        { 
  88   2          Key_Proc();
  89   2          Lcd_Proc();
  90   2          Detection_Proc(); 
  91   2        }
  92   1      }
  93          
  94          //================LCD=======================
  95          
  96          void Lcd_Proc(void)     //LCD Dsiplay process function
  97          {
  98   1        if(lcd_slow_down) return;   //200ms刷新一次
  99   1          lcd_slow_down = 1;
 100   1        
 101   1        if(page == 0)            //测量界面 初始界面
 102   1        { 
 103   2          sprintf((char *)dispbuf,"%06.2f",cap_value);
 104   2          
 105   2          LCD_WriteCommand(0x0C);//关光标
 106   2          
 107   2          LCD_ShowString(1,1,"Press OK Start!");
 108   2          
 109   2          LCD_ShowChar(2,1,dispbuf[0]);
 110   2          LCD_ShowChar(2,2,dispbuf[1]);
 111   2          LCD_ShowChar(2,3,dispbuf[2]);
 112   2          LCD_ShowChar(2,4,dispbuf[3]);
 113   2          LCD_ShowChar(2,5,dispbuf[4]);
 114   2          LCD_ShowChar(2,6,dispbuf[5]);
 115   2          
 116   2          switch(cap_units)
C51 COMPILER V9.60.0.0   MAIN                                                              12/14/2023 17:25:46 PAGE 3   

 117   2          {
 118   3            case 0:
 119   3              LCD_ShowString(2,7,"uF");
 120   3              break;
 121   3            case 1:
 122   3              LCD_ShowString(2,7,"nF");
 123   3              break;
 124   3            case 2:
 125   3              LCD_ShowString(2,7,"pF");
 126   3              break;
 127   3            default:
 128   3              break;
 129   3          }
 130   2          
 131   2          //LCD_ShowNum(2,8,key_tick,4); //测试按键长按
 132   2        }
 133   1        else if(page == 1)       //输密码页
 134   1        {
 135   2          LCD_WriteCommand(0x0f);//开光标
 136   2          
 137   2          LCD_ShowString(1,2,"Input Password");
 138   2          LCD_ShowString(2,6,password);
 139   2        }
 140   1        else if(page == 2)       //密码错误页
 141   1        {
 142   2          LCD_WriteCommand(0x0C);//关光标
 143   2          LCD_ShowString(1,6,"ERROR");
 144   2        }
 145   1        else if(page == 3)       //密码正确页
 146   1        {
 147   2          LCD_WriteCommand(0x0C);//关光标
 148   2          LCD_ShowString(1,6,"RIGHT");
 149   2        }
 150   1        else if(page == 4)
 151   1        {
 152   2          LCD_ShowString(1,1,"Wait...");
 153   2          LCD_ShowString(2,1,"Press OK End");
 154   2        }
 155   1        
 156   1        if(page == 2 || page == 3) //闪一下ERROR和RIGHT的页面
 157   1        {
 158   2          Delay(2000); //两秒后切换页面
 159   2          Lcd_Clear();
 160   2          page = 0;//密码输完后切换到校准页面   
 161   2        }
 162   1        
 163   1        //LCD_WriteCommand(0x80+cursor); //第一行光标
 164   1        LCD_WriteCommand(0xc0+cursor); //第二行光标 
 165   1      }
 166          
 167          //================Key=======================
 168          
 169          void Key_Proc(void)
 170          {
 171   1        if(key_slow_down) return;   //10ms更新一次
 172   1          key_slow_down = 1;
 173   1        
 174   1        key_value = Key_Read();
 175   1        key_down = key_value & (key_value ^ key_old);
 176   1        key_up = ~key_value & (key_value ^ key_old);
 177   1        key_old = key_value;
 178   1      
C51 COMPILER V9.60.0.0   MAIN                                                              12/14/2023 17:25:46 PAGE 4   

 179   1        if(key_down)       //长按五秒
 180   1          key_tick = 2000;
 181   1        
 182   1        if(key_old)
 183   1        {
 184   2          if(key_tick == 0)
 185   2            {
 186   3              Lcd_Clear();
 187   3              page = 1;
 188   3              
 189   3              //清空密码字符串
 190   3              for(password_for = 0;password_for <= 5; password_for++)
 191   3              {
 192   4                password[password_for] = '0';
 193   4              }
 194   3            }
 195   2        }
 196   1        
 197   1        if(key_tick)
 198   1        {
 199   2          switch(key_up)
 200   2          {
 201   3            case 1:        //背光/校准按键
 202   3            {
 203   4              key_tick = 0;
 204   4              break;
 205   4            }
 206   3            case 2:        //↑ 
 207   3            {
 208   4              password[cursor-5] += 1;
 209   4              if(password[cursor-5] > '9')
 210   4                password[cursor-5] = '9';
 211   4            
 212   4              key_tick = 0;
 213   4              break;
 214   4            }
 215   3            case 3:        //↓
 216   3            {
 217   4              password[cursor-5] -= 1;
 218   4              if(password[cursor-5] == '/')
 219   4                password[cursor-5] = '0';
 220   4              
 221   4              key_tick = 0;
 222   4              break;
 223   4            }
 224   3            case 4:        //←
 225   3            {
 226   4              if(--cursor <= 5)
 227   4                cursor = 5;
 228   4              key_tick = 0;
 229   4              break;
 230   4            }
 231   3            case 5:        //→
 232   3            {
 233   4              if(++cursor >= 10)
 234   4                cursor = 10;
 235   4              key_tick = 0;
 236   4              break;
 237   4            }
 238   3            case 6:        //OK
 239   3            {
 240   4              if(page == 0)      //如果在测量页，按下OK键开始测量
C51 COMPILER V9.60.0.0   MAIN                                                              12/14/2023 17:25:46 PAGE 5   

 241   4              {
 242   5                Lcd_Clear();
 243   5                page = 4;
 244   5              }
 245   4              else if(page == 4) //如果正在测量，按下OK键停止测量
 246   4              {
 247   5                Lcd_Clear();
 248   5                page = 0;
 249   5                cap_value = 0;//清零
 250   5                
 251   5                if(cap_value_k1 < 5.00 && cap_value_k1 > 0.50)
 252   5                {
 253   6                  cap_value = cap_value_k1;
 254   6                  cap_units = 0;           //单位换成uF
 255   6                }
 256   5                else if(cap_value_k1 <= 0.50 && cap_value_k2 > 0.50)
 257   5                {
 258   6                  cap_value = cap_value_k2 * 100;
 259   6                  cap_units = 1;           //单位换成nF
 260   6                }
 261   5                else if(cap_value_k2 <= 0.50 && cap_value_k3 > 0.50)
 262   5                {
 263   6                  cap_value = cap_value_k3 * 10;
 264   6                  cap_units = 1;           //单位换成nF
 265   6                }
 266   5                else if(cap_value_k3 <= 0.50 && cap_value_k4 > 0.00)
 267   5                {
 268   6                  cap_value = cap_value_k4;
 269   6                  cap_units = 1;
 270   6                }
 271   5            
 272   5              }
 273   4              else if(page == 1) //如果在输密码页，按下OK键确认密码
 274   4              {
 275   5                Lcd_Clear();
 276   5                if(strncmp(password,password_true,6) == 0)
 277   5                  page = 3;
 278   5                else
 279   5                  page = 2;
 280   5              }
 281   4              
 282   4              key_tick = 0;
 283   4              break;
 284   4            }
 285   3            
 286   3            default:
 287   3              break;
 288   3          }   
 289   2        }
 290   1      }
 291          
 292          //================电容检测函数======================
 293          void Detection_Proc(void)
 294          {
 295   1        if(Det_slow_down) return;   //10ms更新一次
 296   1        Det_slow_down = 1;
 297   1        
 298   1        if(relay_index == 1)
 299   1        {
 300   2          adc_char = GetADCResult(0); //测量P10 ADC
 301   2          cap_value_k1 = (float)adc_char/51;//转换成电压值
 302   2        }
C51 COMPILER V9.60.0.0   MAIN                                                              12/14/2023 17:25:46 PAGE 6   

 303   1        else if(relay_index == 2)
 304   1        {
 305   2          adc_char = GetADCResult(0); //测量P10 ADC
 306   2          cap_value_k2 = (float)adc_char/51;//转换成电压值
 307   2        }
 308   1        else if(relay_index == 3)
 309   1        {
 310   2          adc_char = GetADCResult(0); //测量P10 ADC
 311   2          cap_value_k3 = (float)adc_char/51;//转换成电压值
 312   2        }
 313   1        else if(relay_index == 4)
 314   1        {
 315   2          adc_char = GetADCResult(0); //测量P10 ADC
 316   2          cap_value_k4 = (float)adc_char/51;//转换成电压值
 317   2        }
 318   1      }
 319          
 320          //================中断函数=======================
 321          void Timer0_Isr(void) interrupt 1
 322          {
 323   1        if(++key_slow_down == 10) key_slow_down = 0;
 324   1        if(++lcd_slow_down == 200) lcd_slow_down = 0;
 325   1        if(++Det_slow_down == 10) Det_slow_down = 0;
 326   1        
 327   1        if(delay_tick > 0) delay_tick--;//延时函数 会卡住当前函数
 328   1        if(key_tick > 0) key_tick--;    //按键计时
 329   1        
 330   1        //呼吸灯 用于测试中断
 331   1      //  if(++led1_tick >= 1000)
 332   1      //  {
 333   1      //    LED1 ^= 1;
 334   1      //    led1_tick = 0;
 335   1      //  }
 336   1          
 337   1        
 338   1      //  if(Buzzer == 0)
 339   1      //  {
 340   1      //    if(++buzzer_tick >= 500)
 341   1      //      {
 342   1      //        Buzzer = 1;
 343   1      //        buzzer_tick = 0;
 344   1      //      }
 345   1      //  }   
 346   1      
 347   1      //---------继电器切换控制----------------------
 348   1        if(page ==  4)
 349   1        {
 350   2          if(++relay_tick > 1000)
 351   2          {
 352   3            if(++relay_index > 4)
 353   3              relay_index = 1;
 354   3            relay_tick = 0;
 355   3          }
 356   2          
 357   2          Relay_Control(relay_index, 1);
 358   2        }   
 359   1          
 360   1        
 361   1      }
 362          
 363          void Delay(unsigned int delay) //定时器延时 会卡住当前函数
 364          {
C51 COMPILER V9.60.0.0   MAIN                                                              12/14/2023 17:25:46 PAGE 7   

 365   1        delay_tick = delay;
 366   1        while(delay_tick > 0);
 367   1      }
 368          
 369          void Timer0_Init(void)    //1毫秒@11.0592MHz
 370          {
 371   1        AUXR |= 0x80;     //定时器时钟1T模式
 372   1        TMOD &= 0xF0;     //设置定时器模式
 373   1        TL0 = 0xCD;       //设置定时初始值
 374   1        TH0 = 0xD4;       //设置定时初始值
 375   1        TF0 = 0;        //清除TF0标志
 376   1        TR0 = 1;        //定时器0开始计时
 377   1        ET0 = 1;        //使能定时器0中断
 378   1        EA = 1;         //总中断
 379   1      }
 380           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1318    ----
   CONSTANT SIZE    =     80    ----
   XDATA SIZE       =     16    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     56    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
