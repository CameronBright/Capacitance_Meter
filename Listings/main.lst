C51 COMPILER V9.60.0.0   MAIN                                                              11/07/2023 20:09:59 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\WorkSoftware\Keil5_C51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\code) DEBUG OBJE
                    -CTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2          program versions : 2.6.1
   3          
   4          完善光标移动功能，密码功能还没做完，但是下班了
   5          
   6          modification: 2023/11/6 23:11
   7          
   8          modifier: Cameron Bright
   9          
  10          */
  11          
  12          #include "main.h"
  13          #include <string.h>
  14          #include "LCD1602.h"  //包含LCD1602头文件
  15          #include "Key.h"      //按键扫描函数
  16          
  17          sbit V0 = P1^2;
  18          
  19          sbit K1 = P3^7;//继电器 低电平闭合
  20          sbit K2 = P3^6;
  21          sbit K3 = P3^5;
  22          sbit K4 = P3^4;
  23          
  24          sbit Buzzer = P2^3;//蜂鸣器 低电平工作
  25          
  26          void Timer0_Init(void); //1毫秒@11.0592MHz
  27          void Delay(unsigned int delay); //定时器延时 
  28          
  29          void Key_Proc(void);    //Keystroke process function
  30          void Lcd_Proc(void);    //LCD Dsiplay process function
  31          
  32          unsigned int timer_tick = 0;
  33          unsigned int buzzer_tick = 0;//用于开机计数500ms
  34          
  35          unsigned char key_value; //按键处理变量
  36          unsigned char key_down;
  37          unsigned char key_up;
  38          unsigned char key_old;
  39          
  40          unsigned int led1_tick; //状态灯计数
  41          unsigned int key_tick; //long key press count
  42          unsigned int delay_tick;//定时器延时计数
  43          
  44          unsigned char page = 0;//lcd 显示界面
  45          unsigned char cursor = 5; //光标
  46          
  47          unsigned int key_slow_down = 0; //按键刷新计数
  48          unsigned int lcd_slow_down = 0; //LCD刷新计数
  49          
  50          unsigned char password[6] = {'0','0','0','0','0','0'};
  51          //unsigned char password_true[6] = {'8','7','6','5','4','3'};
  52          unsigned char password_true[6] = {'8','7','6','5','4','3'}; //正确密码
  53          unsigned char password_for = 0; 
  54          
C51 COMPILER V9.60.0.0   MAIN                                                              11/07/2023 20:09:59 PAGE 2   

  55          unsigned int cap_value = 0;
  56          
  57          void main()
  58          {
  59   1        Timer0_Init();//定时器初始化
  60   1        
  61   1        //Buzzer = 0;
  62   1        LCD_Init();
  63   1        K2 = 0;
  64   1        
  65   1        EA = 1;
  66   1        
  67   1        while(1)
  68   1        { 
  69   2          Key_Proc();
  70   2          Lcd_Proc();
  71   2        }
  72   1        
  73   1      }
  74          
  75          //================LCD=======================
  76          
  77          void Lcd_Proc(void)     //LCD Dsiplay process function
  78          {
  79   1        if(lcd_slow_down) return;   //10ms更新一次
  80   1          lcd_slow_down = 1;
  81   1        
  82   1        if(page == 0)            //测量界面 初始界面
  83   1        {
  84   2          LCD_WriteCommand(0x0C);//关光标
  85   2          
  86   2          LCD_ShowString(1,1,"Press OK Start!");
  87   2        
  88   2          LCD_ShowNum(2,1,cap_value,4);
  89   2          LCD_ShowNum(2,8,key_tick,4);
  90   2        }
  91   1        else if(page == 1)       //输密码页
  92   1        {
  93   2          LCD_WriteCommand(0x0f);//开光标
  94   2          
  95   2          LCD_ShowString(1,2,"Input Password");
  96   2          LCD_ShowString(2,6,password);
  97   2        }
  98   1        else if(page == 2)       //密码错误页
  99   1        {
 100   2          LCD_WriteCommand(0x0C);//关光标
 101   2          LCD_ShowString(1,6,"ERROR");
 102   2          LCD_ShowNum(2,1,delay_tick,4);
 103   2        }
 104   1        else if(page == 3)       //密码正确页
 105   1        {
 106   2          LCD_WriteCommand(0x0C);//关光标
 107   2          LCD_ShowString(1,6,"RIGHT");
 108   2        } 
 109   1        
 110   1        if(page == 2 || page == 3) //闪一下ERROR和RIGHT的页面
 111   1        {
 112   2          Delay(300);
 113   2          Lcd_Clear();
 114   2          page = 0;
 115   2        }
 116   1        
C51 COMPILER V9.60.0.0   MAIN                                                              11/07/2023 20:09:59 PAGE 3   

 117   1        //LCD_WriteCommand(0x80+cursor); //第一行光标
 118   1        LCD_WriteCommand(0xc0+cursor); //第二行光标 
 119   1        
 120   1      }
 121          
 122          //================Key=======================
 123          
 124          void Key_Proc(void)
 125          {
 126   1        if(key_slow_down) return;   //10ms更新一次
 127   1          key_slow_down = 1;
 128   1        
 129   1        key_value = Key_Read();
 130   1        key_down = key_value & (key_value ^ key_old);
 131   1        key_up = ~key_value & (key_value ^ key_old);
 132   1        key_old = key_value;
 133   1      
 134   1        if(key_down)       //长按五秒
 135   1          key_tick = 2000;
 136   1        
 137   1        if(key_old)
 138   1        {
 139   2          if(key_tick == 0)
 140   2            {
 141   3              Lcd_Clear();
 142   3              page = 1;
 143   3              
 144   3              //清空密码字符串
 145   3              for(password_for = 0;password_for <= 5; password_for++)
 146   3              {
 147   4                password[password_for] = '0';
 148   4              }
 149   3            }
 150   2        }
 151   1        
 152   1        if(key_tick)
 153   1        {
 154   2          switch(key_up)
 155   2          {
 156   3            case 1:        //背光/校准按键
 157   3            {
 158   4              LED1 = 1;
 159   4              break;
 160   4            }
 161   3            case 2:        //↑ 
 162   3            {
 163   4              password[cursor-5] += 1;
 164   4              if(password[cursor-5] > '9')
 165   4                password[cursor-5] = '9';
 166   4            
 167   4              key_tick = 0;
 168   4              break;
 169   4            }
 170   3            case 3:        //↓
 171   3            {
 172   4              password[cursor-5] -= 1;
 173   4              if(password[cursor-5] == '/')
 174   4                password[cursor-5] = '0';
 175   4              
 176   4              key_tick = 0;
 177   4              break;
 178   4            }
C51 COMPILER V9.60.0.0   MAIN                                                              11/07/2023 20:09:59 PAGE 4   

 179   3            case 4:        //←
 180   3            {
 181   4              if(--cursor <= 5)
 182   4                cursor = 5;
 183   4              key_tick = 0;
 184   4              break;
 185   4            }
 186   3            case 5:        //→
 187   3            {
 188   4              if(++cursor >= 10)
 189   4                cursor = 10;
 190   4              key_tick = 0;
 191   4              break;
 192   4            }
 193   3            case 6:        //OK
 194   3            {
 195   4              Lcd_Clear();
 196   4              if(strncmp(password,password_true,6) == 0)
 197   4                page = 3;
 198   4              else
 199   4                page = 2;
 200   4              key_tick = 0;
 201   4              break;
 202   4            }
 203   3            
 204   3            default:
 205   3              break;
 206   3          }   
 207   2        }
 208   1        
 209   1      }
 210          
 211          //================中断函数=======================
 212          void Timer0_Isr(void) interrupt 1
 213          {
 214   1        if(++key_slow_down == 10) key_slow_down = 0;
 215   1        if(++lcd_slow_down == 200) lcd_slow_down = 0;
 216   1        
 217   1        if(delay_tick > 0) delay_tick--;//延时函数 会卡住当前函数
 218   1          
 219   1        if(key_tick > 0) key_tick--;
 220   1        
 221   1      //  if(page == 2 || page == 3)
 222   1      //  {
 223   1      //    
 224   1      //  }
 225   1        
 226   1        //呼吸灯 用于测试中断
 227   1        if(++led1_tick >= 1000)
 228   1        {
 229   2          LED1 ^= 1;
 230   2          led1_tick = 0;
 231   2        }
 232   1          
 233   1        
 234   1      //  if(Buzzer == 0)
 235   1      //  {
 236   1      //    if(++buzzer_tick >= 500)
 237   1      //      {
 238   1      //        Buzzer = 1;
 239   1      //        buzzer_tick = 0;
 240   1      //      }
C51 COMPILER V9.60.0.0   MAIN                                                              11/07/2023 20:09:59 PAGE 5   

 241   1      //  }
 242   1        
 243   1          
 244   1      //  TL0 = 0x20;       //设置定时初始值
 245   1      //  TH0 = 0xD1;       //设置定时初始值
 246   1          
 247   1      }
 248          
 249          void Delay(unsigned int delay) //定时器延时 会卡住当前函数
 250          {
 251   1        delay_tick = delay;
 252   1        while(delay_tick > 0);
 253   1      }
 254          
 255          void Timer0_Init(void)    //1毫秒@11.0592MHz
 256          {
 257   1        AUXR |= 0x80;     //定时器时钟1T模式
 258   1        TMOD &= 0xF0;     //设置定时器模式
 259   1        TL0 = 0xCD;       //设置定时初始值
 260   1        TH0 = 0xD4;       //设置定时初始值
 261   1        TF0 = 0;        //清除TF0标志
 262   1        TR0 = 1;        //定时器0开始计时
 263   1        ET0 = 1;        //使能定时器0中断
 264   1      }
 265           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    617    ----
   CONSTANT SIZE    =     43    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
