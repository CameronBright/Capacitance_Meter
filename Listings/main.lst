C51 COMPILER V9.60.0.0   MAIN                                                              11/09/2023 13:44:50 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\WorkSoftware\Keil5_C51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\code) DEBUG OBJE
                    -CTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2          program versions : 3.1.1
   3          
   4          Created ADC function;
   5          已经能检测ADC，但是还没能在LCD上显示小数。先下班
   6          
   7          modification: 2023/11/8 23:52
   8          
   9          modifier: Cameron Bright
  10          
  11          */
  12          
  13          #include "main.h"
  14          #include <string.h>
  15          #include "LCD1602.h"  //包含LCD1602头文件
  16          #include "Key.h"      //按键扫描函数
  17          #include "ADC.h"
  18          #include <stdio.h>
  19          
  20          sbit V0 = P1^2;
  21          
  22          sbit K1 = P3^7;//继电器 低电平闭合
  23          sbit K2 = P3^6;
  24          sbit K3 = P3^5;
  25          sbit K4 = P3^4;
  26          
  27          sbit Buzzer = P2^3;//蜂鸣器 低电平工作
  28          
  29          void Timer0_Init(void); //1毫秒@11.0592MHz
  30          void Delay(unsigned int delay); //定时器延时 
  31          
  32          void Key_Proc(void);    //Keystroke process function
  33          void Lcd_Proc(void);    //LCD Dsiplay process function
  34          
  35          unsigned int timer_tick = 0;
  36          unsigned int buzzer_tick = 0;//用于开机计数500ms
  37          
  38          unsigned char key_value; //按键处理变量
  39          unsigned char key_down;
  40          unsigned char key_up;
  41          unsigned char key_old;
  42          
  43          unsigned int led1_tick; //状态灯计数
  44          unsigned int key_tick; //long key press count
  45          unsigned int delay_tick;//定时器延时计数
  46          unsigned int cap_tick;  //电容测量计计时
  47          
  48          unsigned char dispbuf[4] = {'0','0','0','0'};
  49          unsigned char page = 0;//lcd 显示界面
  50          unsigned char cursor = 5; //光标
  51          
  52          unsigned int key_slow_down = 0; //按键刷新计数
  53          unsigned int lcd_slow_down = 0; //LCD刷新计数
  54          
C51 COMPILER V9.60.0.0   MAIN                                                              11/09/2023 13:44:50 PAGE 2   

  55          unsigned char password[6] = {'0','0','0','0','0','0'};
  56          //unsigned char password_true[6] = {'8','7','6','5','4','3'};
  57          unsigned char password_true[6] = {'8','7','6','5','4','3'}; //正确密码
  58          unsigned char password_for = 0; 
  59          
  60          unsigned char capvalue_char;
  61          float capvalue_float;
  62          
  63          
  64          void main()
  65          {
  66   1        Timer0_Init();//定时器初始化
  67   1        LCD_Init(); //LCD函数初始化
  68   1        ADC_Init(); //ADC函数初始化
  69   1        
  70   1        //Buzzer = 0;//蜂鸣器初始化
  71   1        
  72   1      //  K1 = 1;
  73   1      //  K2 = 0;
  74   1      //  K3 = 1;
  75   1        K4 = 1;
  76   1        
  77   1        while(1)
  78   1        { 
  79   2          Key_Proc();
  80   2          Lcd_Proc();
  81   2        }
  82   1        
  83   1      }
  84          
  85          //================LCD=======================
  86          
  87          void Lcd_Proc(void)     //LCD Dsiplay process function
  88          {
  89   1        if(lcd_slow_down) return;   //10ms更新一次
  90   1          lcd_slow_down = 1;
  91   1        
  92   1        if(page == 0)            //测量界面 初始界面
  93   1        {
  94   2          capvalue_char = GetADCResult(0); //测量P10 ADC
  95   2          capvalue_float = (float)capvalue_char/51;
  96   2          
  97   2          sprintf((char *)dispbuf,"%3.2f",capvalue_float);
  98   2          
  99   2          LCD_WriteCommand(0x0C);//关光标
 100   2          
 101   2          LCD_ShowString(1,1,"Press OK Start!");
 102   2          
 103   2          LCD_ShowChar(2,1,dispbuf[0]);
 104   2          LCD_ShowChar(2,2,dispbuf[1]);
 105   2          LCD_ShowChar(2,3,dispbuf[2]);
 106   2          LCD_ShowChar(2,4,dispbuf[3]);
 107   2          //LCD_ShowString(2,1,dispbuf);
 108   2          //LCD_ShowNum(2,1,capvalue_float,4);
 109   2          LCD_ShowNum(2,8,key_tick,4);
 110   2        }
 111   1        else if(page == 1)       //输密码页
 112   1        {
 113   2          LCD_WriteCommand(0x0f);//开光标
 114   2          
 115   2          LCD_ShowString(1,2,"Input Password");
 116   2          LCD_ShowString(2,6,password);
C51 COMPILER V9.60.0.0   MAIN                                                              11/09/2023 13:44:50 PAGE 3   

 117   2        }
 118   1        else if(page == 2)       //密码错误页
 119   1        {
 120   2          LCD_WriteCommand(0x0C);//关光标
 121   2          LCD_ShowString(1,6,"ERROR");
 122   2        }
 123   1        else if(page == 3)       //密码正确页
 124   1        {
 125   2          LCD_WriteCommand(0x0C);//关光标
 126   2          LCD_ShowString(1,6,"RIGHT");
 127   2        } 
 128   1        
 129   1        if(page == 2 || page == 3) //闪一下ERROR和RIGHT的页面
 130   1        {
 131   2          Delay(2000); //两秒后切换页面
 132   2          Lcd_Clear();
 133   2          page = 0;   
 134   2        }
 135   1        
 136   1        //LCD_WriteCommand(0x80+cursor); //第一行光标
 137   1        LCD_WriteCommand(0xc0+cursor); //第二行光标 
 138   1      }
 139          
 140          //================Key=======================
 141          
 142          void Key_Proc(void)
 143          {
 144   1        if(key_slow_down) return;   //10ms更新一次
 145   1          key_slow_down = 1;
 146   1        
 147   1        key_value = Key_Read();
 148   1        key_down = key_value & (key_value ^ key_old);
 149   1        key_up = ~key_value & (key_value ^ key_old);
 150   1        key_old = key_value;
 151   1      
 152   1        if(key_down)       //长按五秒
 153   1          key_tick = 2000;
 154   1        
 155   1        if(key_old)
 156   1        {
 157   2          if(key_tick == 0)
 158   2            {
 159   3              Lcd_Clear();
 160   3              page = 1;
 161   3              
 162   3              //清空密码字符串
 163   3              for(password_for = 0;password_for <= 5; password_for++)
 164   3              {
 165   4                password[password_for] = '0';
 166   4              }
 167   3            }
 168   2        }
 169   1        
 170   1        if(key_tick)
 171   1        {
 172   2          switch(key_up)
 173   2          {
 174   3            case 1:        //背光/校准按键
 175   3            {
 176   4              K4 ^= 1;
 177   4              key_tick = 0;
 178   4              break;
C51 COMPILER V9.60.0.0   MAIN                                                              11/09/2023 13:44:50 PAGE 4   

 179   4            }
 180   3            case 2:        //↑ 
 181   3            {
 182   4              password[cursor-5] += 1;
 183   4              if(password[cursor-5] > '9')
 184   4                password[cursor-5] = '9';
 185   4            
 186   4              key_tick = 0;
 187   4              break;
 188   4            }
 189   3            case 3:        //↓
 190   3            {
 191   4              password[cursor-5] -= 1;
 192   4              if(password[cursor-5] == '/')
 193   4                password[cursor-5] = '0';
 194   4              
 195   4              key_tick = 0;
 196   4              break;
 197   4            }
 198   3            case 4:        //←
 199   3            {
 200   4              if(--cursor <= 5)
 201   4                cursor = 5;
 202   4              key_tick = 0;
 203   4              break;
 204   4            }
 205   3            case 5:        //→
 206   3            {
 207   4              if(++cursor >= 10)
 208   4                cursor = 10;
 209   4              key_tick = 0;
 210   4              break;
 211   4            }
 212   3            case 6:        //OK
 213   3            {
 214   4              Lcd_Clear();
 215   4              if(strncmp(password,password_true,6) == 0)
 216   4                page = 3;
 217   4              else
 218   4                page = 2;
 219   4              key_tick = 0;
 220   4              break;
 221   4            }
 222   3            
 223   3            default:
 224   3              break;
 225   3          }   
 226   2        }
 227   1        
 228   1      }
 229          
 230          //================中断函数=======================
 231          void Timer0_Isr(void) interrupt 1
 232          {
 233   1        if(++key_slow_down == 10) key_slow_down = 0;
 234   1        if(++lcd_slow_down == 200) lcd_slow_down = 0;
 235   1        
 236   1        if(delay_tick > 0) delay_tick--;//延时函数 会卡住当前函数
 237   1        if(key_tick > 0) key_tick--;    //按键计时
 238   1        
 239   1        if(++cap_tick >= 1000)
 240   1        {
C51 COMPILER V9.60.0.0   MAIN                                                              11/09/2023 13:44:50 PAGE 5   

 241   2          //K1 ^= 1;
 242   2      //    K2 ^= 1;
 243   2      //    K3 ^= 1;
 244   2      //    K4 ^= 1;
 245   2          cap_tick = 0;
 246   2        }
 247   1        
 248   1        //呼吸灯 用于测试中断
 249   1        if(++led1_tick >= 1000)
 250   1        {
 251   2          LED1 ^= 1;
 252   2          led1_tick = 0;
 253   2        }
 254   1          
 255   1        
 256   1      //  if(Buzzer == 0)
 257   1      //  {
 258   1      //    if(++buzzer_tick >= 500)
 259   1      //      {
 260   1      //        Buzzer = 1;
 261   1      //        buzzer_tick = 0;
 262   1      //      }
 263   1      //  }   
 264   1      }
 265          
 266          void Delay(unsigned int delay) //定时器延时 会卡住当前函数
 267          {
 268   1        delay_tick = delay;
 269   1        while(delay_tick > 0);
 270   1      }
 271          
 272          void Timer0_Init(void)    //1毫秒@11.0592MHz
 273          {
 274   1        AUXR |= 0x80;     //定时器时钟1T模式
 275   1        TMOD &= 0xF0;     //设置定时器模式
 276   1        TL0 = 0xCD;       //设置定时初始值
 277   1        TH0 = 0xD4;       //设置定时初始值
 278   1        TF0 = 0;        //清除TF0标志
 279   1        TR0 = 1;        //定时器0开始计时
 280   1        ET0 = 1;        //使能定时器0中断
 281   1        EA = 1;         //总中断
 282   1      }
 283           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    710    ----
   CONSTANT SIZE    =     49    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     44    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
