C51 COMPILER V9.57.0.0   LCD1602                                                           10/08/2023 22:21:06 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: D:\Software\WorkSoftware\Keil5\MDK\C51\BIN\C51.EXE code\LCD1602.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.
                    -\code) DEBUG OBJECTEXTEND PRINT(.\Listings\LCD1602.lst) TABS(2) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include <STC12C5A60S2.H>
   2          #include <Delay.h>
   3          //引脚配置：
   4          
   5          sbit LCD_RS=P2^7;
   6          sbit LCD_RW=P2^6;
   7          sbit LCD_EN=P2^5;
   8          sbit LCD_VCC = P2^4;
   9          
  10          #define LCD_DataPort P0
  11          
  12          
  13          /**
  14            * @brief  LCD1602写命令
  15            * @param  Command 要写入的命令
  16            * @retval 无
  17            */
  18          void LCD_WriteCommand(unsigned char Command)
  19          {
  20   1        LCD_RS=0;
  21   1        LCD_RW=0;
  22   1        LCD_DataPort=Command;
  23   1        LCD_EN=1;
  24   1        Delay1ms();
  25   1        LCD_EN=0;
  26   1        Delay1ms();
  27   1      }
  28          
  29          /**
  30            * @brief  LCD1602写数据
  31            * @param  Data 要写入的数据
  32            * @retval 无
  33            */
  34          void LCD_WriteData(unsigned char Data)
  35          {
  36   1        LCD_RS=1;
  37   1        LCD_RW=0;
  38   1        LCD_DataPort=Data;
  39   1        LCD_EN=1;
  40   1        Delay1ms();
  41   1        LCD_EN=0;
  42   1        Delay1ms();
  43   1      }
  44          
  45          /**
  46            * @brief  LCD1602设置光标位置
  47            * @param  Line 行位置，范围：1~2
  48            * @param  Column 列位置，范围：1~16
  49            * @retval 无
  50            */
  51          void LCD_SetCursor(unsigned char Line,unsigned char Column)
  52          {
  53   1        if(Line==1)
  54   1        {
C51 COMPILER V9.57.0.0   LCD1602                                                           10/08/2023 22:21:06 PAGE 2   

  55   2          LCD_WriteCommand(0x80|(Column-1));
  56   2        }
  57   1        else if(Line==2)
  58   1        {
  59   2          LCD_WriteCommand(0x80|(Column-1+0x40));
  60   2        }
  61   1      }
  62          
  63          /**
  64            * @brief  LCD1602初始化函数
  65            * @param  无
  66            * @retval 无
  67            */
  68          void LCD_Init()
  69          {
  70   1        P0M1 = 0x00;   P0M0 = 0x00;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
  71   1        P2M1 = 0x00;   P2M0 = 0x00;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
  72   1        
  73   1        LCD_VCC = 1;
  74   1        LCD_WriteCommand(0x38);//八位数据接口，两行显示，5*7点阵
  75   1        LCD_WriteCommand(0x0c);//显示开，光标关，闪烁关
  76   1        LCD_WriteCommand(0x06);//数据读写操作后，光标自动加一，画面不动
  77   1        LCD_WriteCommand(0x01);//光标复位，清屏
  78   1      }
  79          
  80          /**
  81            * @brief  在LCD1602指定位置上显示一个字符
  82            * @param  Line 行位置，范围：1~2
  83            * @param  Column 列位置，范围：1~16
  84            * @param  Char 要显示的字符
  85            * @retval 无
  86            */
  87          void LCD_ShowChar(unsigned char Line,unsigned char Column,char Char)
  88          {
  89   1        LCD_SetCursor(Line,Column);
  90   1        LCD_WriteData(Char);
  91   1      }
  92          
  93          /**
  94            * @brief  在LCD1602指定位置开始显示所给字符串
  95            * @param  Line 起始行位置，范围：1~2
  96            * @param  Column 起始列位置，范围：1~16
  97            * @param  String 要显示的字符串
  98            * @retval 无
  99            */
 100          void LCD_ShowString(unsigned char Line,unsigned char Column,char *String)
 101          {
 102   1        unsigned char i;
 103   1        LCD_SetCursor(Line,Column);
 104   1        for(i=0;String[i]!='\0';i++)
 105   1        {
 106   2          LCD_WriteData(String[i]);
 107   2        }
 108   1      }
 109          
 110          /**
 111            * @brief  返回值=X的Y次方
 112            */
 113          int LCD_Pow(int X,int Y)
 114          {
 115   1        unsigned char i;
 116   1        int Result=1;
C51 COMPILER V9.57.0.0   LCD1602                                                           10/08/2023 22:21:06 PAGE 3   

 117   1        for(i=0;i<Y;i++)
 118   1        {
 119   2          Result*=X;
 120   2        }
 121   1        return Result;
 122   1      }
 123          
 124          /**
 125            * @brief  在LCD1602指定位置开始显示所给数字
 126            * @param  Line 起始行位置，范围：1~2
 127            * @param  Column 起始列位置，范围：1~16
 128            * @param  Number 要显示的数字，范围：0~65535
 129            * @param  Length 要显示数字的长度，范围：1~5
 130            * @retval 无
 131            */
 132          void LCD_ShowNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 133          {
 134   1        unsigned char i;
 135   1        LCD_SetCursor(Line,Column);
 136   1        for(i=Length;i>0;i--)
 137   1        {
 138   2          LCD_WriteData(Number/LCD_Pow(10,i-1)%10+'0');
 139   2        }
 140   1      }
 141          
 142          /**
 143            * @brief  在LCD1602指定位置开始以有符号十进制显示所给数字
 144            * @param  Line 起始行位置，范围：1~2
 145            * @param  Column 起始列位置，范围：1~16
 146            * @param  Number 要显示的数字，范围：-32768~32767
 147            * @param  Length 要显示数字的长度，范围：1~5
 148            * @retval 无
 149            */
 150          void LCD_ShowSignedNum(unsigned char Line,unsigned char Column,int Number,unsigned char Length)
 151          {
 152   1        unsigned char i;
 153   1        unsigned int Number1;
 154   1        LCD_SetCursor(Line,Column);
 155   1        if(Number>=0)
 156   1        {
 157   2          LCD_WriteData('+');
 158   2          Number1=Number;
 159   2        }
 160   1        else
 161   1        {
 162   2          LCD_WriteData('-');
 163   2          Number1=-Number;
 164   2        }
 165   1        for(i=Length;i>0;i--)
 166   1        {
 167   2          LCD_WriteData(Number1/LCD_Pow(10,i-1)%10+'0');
 168   2        }
 169   1      }
 170          
 171          /**
 172            * @brief  在LCD1602指定位置开始以十六进制显示所给数字
 173            * @param  Line 起始行位置，范围：1~2
 174            * @param  Column 起始列位置，范围：1~16
 175            * @param  Number 要显示的数字，范围：0~0xFFFF
 176            * @param  Length 要显示数字的长度，范围：1~4
 177            * @retval 无
 178            */
C51 COMPILER V9.57.0.0   LCD1602                                                           10/08/2023 22:21:06 PAGE 4   

 179          void LCD_ShowHexNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 180          {
 181   1        unsigned char i,SingleNumber;
 182   1        LCD_SetCursor(Line,Column);
 183   1        for(i=Length;i>0;i--)
 184   1        {
 185   2          SingleNumber=Number/LCD_Pow(16,i-1)%16;
 186   2          if(SingleNumber<10)
 187   2          {
 188   3            LCD_WriteData(SingleNumber+'0');
 189   3          }
 190   2          else
 191   2          {
 192   3            LCD_WriteData(SingleNumber-10+'A');
 193   3          }
 194   2        }
 195   1      }
 196          
 197          /**
 198            * @brief  在LCD1602指定位置开始以二进制显示所给数字
 199            * @param  Line 起始行位置，范围：1~2
 200            * @param  Column 起始列位置，范围：1~16
 201            * @param  Number 要显示的数字，范围：0~1111 1111 1111 1111
 202            * @param  Length 要显示数字的长度，范围：1~16
 203            * @retval 无
 204            */
 205          void LCD_ShowBinNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 206          {
 207   1        unsigned char i;
 208   1        LCD_SetCursor(Line,Column);
 209   1        for(i=Length;i>0;i--)
 210   1        {
 211   2          LCD_WriteData(Number/LCD_Pow(2,i-1)%2+'0');
 212   2        }
 213   1      }
 214          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    441    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      38
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
